{"ast":null,"code":"import { a as _objectSpread, b as _classCallCheck, c as _createClass, d as _possibleConstructorReturn, e as _getPrototypeOf, f as _inherits, g as MapContext, h as pick, i as withNavermaps, j as bridgeEventHandlers, k as injectNaverRef, l as withMap, m as _extends } from './hocs-cc75d7f3.js';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport { compose } from 'recompose';\nimport shallowequal from 'shallowequal';\nimport loadJs from 'load-js';\nimport 'create-react-context';\nimport 'lodash.camelcase';\nimport 'hoist-non-react-statics';\nimport 'warning';\nimport 'react-resize-detector';\nvar mapOptionKeys = ['background', 'baseTileOpacity', 'disableDoubleClickZoom', 'disableDoubleTapZoom', 'disableKineticPan', 'disableTwoFingerTapZoom', 'draggable', 'keyboardShortcuts', 'logoControl', 'logoControlOptions', 'mapDataControl', 'mapDataControlOptions', 'mapTypeControl', 'mapTypeControlOptions', 'mapTypes', 'maxBounds', 'maxZoom', 'minZoom', 'padding', 'pinchZoom', 'resizeOrigin', 'scaleControl', 'scaleControlOptions', 'scrollWheel', 'overlayZoomEffect', 'tileSpare', 'tileTransition', 'zoomControl', 'zoomControlOptions', 'zoomOrigin'];\nvar kvoKeys = ['mapTypeId', 'size', 'bounds', 'center', 'centerPoint', 'zoom'];\nvar defaultKVOKeyMap = {\n  defaultMapTypeId: 'mapTypeId',\n  defaultSize: 'size',\n  defaultBounds: 'bounds',\n  defaultCenter: 'center',\n  defaultCenterPoint: 'centerPoint',\n  defaultZoom: 'zoom'\n};\nvar defaultKVOKeys = kvoKeys.map(function (key) {\n  return 'default' + key[0].toUpperCase() + key.substring(1, key.length);\n});\nvar pickMapOptions = pick(mapOptionKeys);\nvar pickKVOOptions = pick(kvoKeys);\nvar pickDefaultKVOKeys = pick(defaultKVOKeys);\n\nvar NaverMap = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(NaverMap, _React$PureComponent);\n\n  function NaverMap(props) {\n    var _this;\n\n    _classCallCheck(this, NaverMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NaverMap).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(NaverMap, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.instance) {\n        this.instance.destroy();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createMap();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var dirtyKvos = this.pickDirtyKvos(prevProps);\n\n      if (Object.keys(dirtyKvos).length > 0) {\n        this.updateKvos(dirtyKvos);\n      }\n\n      if (this.shouldMapOptionsUpdate(prevProps)) {\n        this.updateMapOptions();\n      }\n    }\n  }, {\n    key: \"pickDirtyKvos\",\n    value: function pickDirtyKvos(prevProps) {\n      var _this$props = this.props,\n          mapTypeId = _this$props.mapTypeId,\n          size = _this$props.size,\n          bounds = _this$props.bounds,\n          center = _this$props.center,\n          centerPoint = _this$props.centerPoint,\n          zoom = _this$props.zoom;\n      var dirties = {};\n\n      if (mapTypeId !== prevProps.mapTypeId && this.getMapTypeId() !== mapTypeId) {\n        dirties.mapTypeId = mapTypeId;\n      }\n\n      if (size !== prevProps.size && !this.getSize().equals(size)) {\n        dirties.size = size;\n      }\n\n      if (zoom !== prevProps.zoom && this.getZoom() !== zoom) {\n        dirties.zoom = zoom;\n      }\n\n      if (bounds !== prevProps.bounds && !this.getBounds().equals(bounds)) {\n        dirties.bounds = bounds;\n      }\n\n      if (center !== prevProps.center && !this.getCenter().equals(center)) {\n        dirties.center = center;\n      }\n\n      if (centerPoint !== prevProps.centerPoint && !this.getCenterPoint().equals(centerPoint)) {\n        dirties.centerPoint = centerPoint;\n      }\n\n      if (zoom !== prevProps.zoom && this.getZoom() !== zoom) {\n        dirties.zoom = zoom;\n      }\n\n      return dirties;\n    }\n  }, {\n    key: \"updateKvos\",\n    value: function updateKvos(kvos) {\n      var transitionOptions = this.props.transitionOptions;\n      var mapTypeId = kvos.mapTypeId,\n          size = kvos.size,\n          bounds = kvos.bounds,\n          center = kvos.center,\n          centerPoint = kvos.centerPoint,\n          zoom = kvos.zoom;\n\n      if (mapTypeId) {\n        this.setMapTypeId(mapTypeId);\n      }\n\n      if (size) {\n        this.updating = true;\n        this.setSize(size);\n      }\n\n      if (centerPoint) {\n        this.updating = true;\n        this.setCenterPoint(centerPoint);\n      }\n\n      if (bounds) {\n        this.updating = true;\n        this.panToBounds(bounds);\n      } else {\n        if (center && zoom) {\n          this.updating = true;\n          this.morph(center, zoom, transitionOptions);\n        } else {\n          if (center) {\n            this.updating = true;\n            this.panTo(center, transitionOptions);\n          }\n\n          if (zoom) {\n            this.updating = true;\n            this.setZoom(zoom);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"shouldMapOptionsUpdate\",\n    value: function shouldMapOptionsUpdate(prevProps) {\n      return !shallowequal(pickMapOptions(this.props), pickMapOptions(prevProps));\n    }\n  }, {\n    key: \"updateMapOptions\",\n    value: function updateMapOptions() {\n      var mapOptions = pickMapOptions(this.props);\n      this.setOptions(_objectSpread({}, mapOptions));\n    }\n    /**\n     * createMap\n     *\n     * create map instance with props.\n     */\n\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          navermaps = _this$props2.navermaps,\n          id = _this$props2.id,\n          registerEventInstance = _this$props2.registerEventInstance;\n      invariant(id, 'react-naver-maps: <Map /> - props.id is required');\n      var mapOptions = pickMapOptions(this.props);\n      var kvoOptions = pickKVOOptions(this.props);\n      var defaultKVOOptions = pickDefaultKVOKeys(this.props);\n\n      var allMapOptions = _objectSpread({}, mapOptions, kvoOptions);\n\n      Object.keys(defaultKVOOptions).forEach(function (defaultKey) {\n        allMapOptions[defaultKVOKeyMap[defaultKey]] = defaultKVOOptions[defaultKey];\n      });\n\n      try {\n        this.instance = new navermaps.Map(id, allMapOptions);\n      } catch (e) {\n        invariant(false, \"react-naver-maps: <Map /> - please check <div id=#\".concat(id, \"> is correctly mounted\"));\n      } // alias\n\n\n      this.map = this.instance;\n      registerEventInstance(this.map); // clear updating state\n\n      this.map.addListener('idle', function () {\n        _this2.updating = false;\n      });\n    }\n    /**\n     * Add pane\n     * @public\n     * @param {string} name\n     * @param {HTMLElement|number} elementOrZIndex\n     */\n\n  }, {\n    key: \"addPane\",\n    value: function addPane() {\n      var _this$map;\n\n      return (_this$map = this.map).addPane.apply(_this$map, arguments);\n    }\n    /**\n     * @public\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return this.map.destroy();\n    }\n    /**\n     * fit bounds\n     * @public\n     * @param  {object} bounds\n     * @param  {object} margin\n     */\n\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds() {\n      var _this$map2;\n\n      return (_this$map2 = this.map).fitBounds.apply(_this$map2, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.map.getBounds();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.map.getCenter();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint() {\n      return this.map.getCenterPoint();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      return this.map.getElement();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getMapTypeId\",\n    value: function getMapTypeId() {\n      return this.map.getMapTypeId();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return this.map.getOptions();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getPanes\",\n    value: function getPanes() {\n      return this.map.getPanes();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getPrimitiveProjection\",\n    value: function getPrimitiveProjection() {\n      return this.map.getPrimitiveProjection();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getProjection\",\n    value: function getProjection() {\n      return this.map.getProjection();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.map.getSize();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.map.getZoom();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"morph\",\n    value: function morph() {\n      var _this$map3;\n\n      return (_this$map3 = this.map).morph.apply(_this$map3, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"panBy\",\n    value: function panBy() {\n      var _this$map4;\n\n      return (_this$map4 = this.map).panBy.apply(_this$map4, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"panTo\",\n    value: function panTo() {\n      var _this$map5;\n\n      return (_this$map5 = this.map).panTo.apply(_this$map5, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"panToBounds\",\n    value: function panToBounds() {\n      var _this$map6;\n\n      return (_this$map6 = this.map).panToBounds.apply(_this$map6, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this$map7;\n\n      return (_this$map7 = this.map).refresh.apply(_this$map7, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"removePane\",\n    value: function removePane() {\n      var _this$map8;\n\n      return (_this$map8 = this.map).removePane.apply(_this$map8, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setCenter\",\n    value: function setCenter() {\n      var _this$map9;\n\n      return (_this$map9 = this.map).setCenter.apply(_this$map9, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint() {\n      var _this$map10;\n\n      return (_this$map10 = this.map).setCenterPoint.apply(_this$map10, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setMapTypeId\",\n    value: function setMapTypeId() {\n      var _this$map11;\n\n      return (_this$map11 = this.map).setMapTypeId.apply(_this$map11, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setOptions\",\n    value: function setOptions() {\n      var _this$map12;\n\n      return (_this$map12 = this.map).setOptions.apply(_this$map12, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setSize\",\n    value: function setSize() {\n      var _this$map13;\n\n      return (_this$map13 = this.map).setSize.apply(_this$map13, arguments);\n    }\n    /**\n     *\n     * @public\n     * @param  {...any} args\n     */\n\n  }, {\n    key: \"setZoom\",\n    value: function setZoom() {\n      var _this$map14;\n\n      return (_this$map14 = this.map).setZoom.apply(_this$map14, arguments);\n    }\n    /**\n     *\n     * @public\n     * @param  {...any} args\n     */\n\n  }, {\n    key: \"updateBy\",\n    value: function updateBy() {\n      var _this$map15;\n\n      return (_this$map15 = this.map).updateBy.apply(_this$map15, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"zoomBy\",\n    value: function zoomBy() {\n      var _this$map16;\n\n      return (_this$map16 = this.map).zoomBy.apply(_this$map16, arguments);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          style = _this$props3.style,\n          className = _this$props3.className,\n          children = _this$props3.children;\n      return React.createElement(MapContext.Provider, {\n        value: this.map\n      }, React.createElement(\"div\", {\n        id: id,\n        className: className,\n        style: style\n      }, children)); // return (\n      //   <div id={id} className={className} style={style}>\n      //     {this.map &&\n      //       React.Children.map(children, child => {\n      //         if (child) {\n      //           return <child.type {...child.props} map={this.map} />;\n      //         }\n      //         return child;\n      //       })}\n      //   </div>\n      // );\n    }\n  }]);\n\n  return NaverMap;\n}(React.PureComponent);\n/**\n *  @visibleName NaverMap\n */\n\n\nNaverMap.propTypes = {\n  navermaps: PropTypes.object.isRequired,\n  registerEventInstance: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  events: PropTypes.arrayOf(PropTypes.string),\n  disableDoubleClickZoom: PropTypes.bool,\n  disableDoubleTapZoom: PropTypes.bool,\n  disableKineticPan: PropTypes.bool,\n  disableTwoFingerTapZoom: PropTypes.bool,\n  draggable: PropTypes.bool,\n  keyboardShortcuts: PropTypes.bool,\n  logoControl: PropTypes.bool,\n  mapDataControl: PropTypes.bool,\n  mapTypeControl: PropTypes.bool,\n  maxBounds: PropTypes.object,\n  pinchZoom: PropTypes.bool,\n  resizeOrigin: PropTypes.number,\n  scaleControl: PropTypes.bool,\n  scrollWheel: PropTypes.bool,\n  overlayZoomEffect: PropTypes.string,\n  tileSpare: PropTypes.number,\n  tileTransition: PropTypes.bool,\n  zoomControl: PropTypes.bool,\n  zoomOrigin: PropTypes.object,\n  mapTypeId: PropTypes.number,\n  size: PropTypes.object,\n  bounds: PropTypes.object,\n  center: PropTypes.object,\n  centerPoint: PropTypes.object,\n  zoom: PropTypes.number,\n  transitionOptions: PropTypes.object\n};\nNaverMap.defaultProps = {\n  events: ['addLayer', 'click', 'dblclick', 'doubletap', 'drag', 'dragend', 'dragstart', 'idle', 'keydown', 'keyup', 'longtap', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'panning', 'pinch', 'pinchend', 'pinchstart', 'removeLayer', 'resize', 'rightclick', 'tap', 'tilesloaded', 'touchend', 'touchmove', 'touchstart', 'twofingertap', 'zooming', 'mapType_changed', 'mapTypeId_changed', 'size_changed', 'bounds_changed', 'center_changed', 'centerPoint_changed', 'projection_changed', 'zoom_changed'],\n  id: 'react-naver-map',\n  disableDoubleClickZoom: false,\n  disableDoubleTapZoom: false,\n  disableKineticPan: true,\n  disableTwoFingerTapZoom: false,\n  draggable: true,\n  keyboardShortcuts: false,\n  logoControl: true,\n  mapDataControl: true,\n  mapTypeControl: false,\n  maxBounds: null,\n  pinchZoom: true,\n  resizeOrigin: 0,\n  scaleControl: true,\n  scrollWheel: true,\n  overlayZoomEffect: null,\n  tileSpare: 0,\n  tileTransition: true,\n  zoomControl: false,\n  zoomOrigin: null,\n  transitionOptions: null\n};\nvar NaverMap$1 = compose(withNavermaps, bridgeEventHandlers, injectNaverRef)(NaverMap);\n\nvar Overlay = /*#__PURE__*/function (_React$Component) {\n  _inherits(Overlay, _React$Component);\n\n  function Overlay() {\n    _classCallCheck(this, Overlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Overlay).apply(this, arguments));\n  }\n\n  _createClass(Overlay, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.overlay) this.overlay.setMap(null);\n    }\n  }, {\n    key: \"createOverlay\",\n    value: function createOverlay() {\n      var _this$props = this.props,\n          OverlayView = _this$props.OverlayView,\n          map = _this$props.map,\n          registerEventInstance = _this$props.registerEventInstance;\n      var overlay = new OverlayView({\n        map: map\n      });\n      registerEventInstance(overlay);\n      return overlay;\n    }\n  }, {\n    key: \"updateOverlay\",\n    value: function updateOverlay(overlay) {\n      var overlayOptions = this.props.pickOverlayOptions(this.props);\n\n      if (this.props.map !== this.overlay.getMap()) {\n        overlayOptions.map = this.props.map;\n      }\n\n      overlay.setOptions(overlayOptions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.overlay) {\n        this.overlay = this.createOverlay();\n      }\n\n      this.updateOverlay(this.overlay);\n      return null;\n    }\n  }]);\n\n  return Overlay;\n}(React.Component);\n\nOverlay.propTypes = {\n  OverlayView: PropTypes.func,\n  map: PropTypes.object,\n  registerEventInstance: PropTypes.func,\n  pickOverlayOptions: PropTypes.func\n};\nvar Overlay$1 = compose(withMap, bridgeEventHandlers)(Overlay);\nvar pickCircleOptions = pick(['center', 'radius', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Circle(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Circle,\n    pickOverlayOptions: pickCircleOptions\n  }));\n}\n\nCircle.defaultProps = {\n  events: ['center_changed', 'click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'radius_changed', 'visible_changed', 'zIndex_changed'],\n  radius: 0,\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nCircle.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  center: PropTypes.object.isRequired,\n  radius: PropTypes.number,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Circle$1 = withNavermaps(Circle);\nvar pickEllipseOptions = pick(['bounds', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Ellipse(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Ellipse,\n    pickOverlayOptions: pickEllipseOptions\n  }));\n}\n\nEllipse.defaultProps = {\n  events: ['bounds_changed', 'click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nEllipse.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  bounds: PropTypes.object.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Ellipse$1 = withNavermaps(Ellipse);\n/**\n *\n * @param {*} props\n */\n\nvar GroundOverlay = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(GroundOverlay, _React$PureComponent);\n\n  function GroundOverlay() {\n    _classCallCheck(this, GroundOverlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroundOverlay).apply(this, arguments));\n  }\n\n  _createClass(GroundOverlay, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.overlay) this.overlay.setMap(null);\n    }\n  }, {\n    key: \"createGroundOverlay\",\n    value: function createGroundOverlay() {\n      var _this$props = this.props,\n          navermaps = _this$props.navermaps,\n          map = _this$props.map,\n          bounds = _this$props.bounds,\n          url = _this$props.url,\n          clickable = _this$props.clickable,\n          registerEventInstance = _this$props.registerEventInstance;\n      var groundOverlay = new navermaps.GroundOverlay(url, bounds, {\n        map: map,\n        clickable: clickable\n      });\n      registerEventInstance(groundOverlay);\n      return groundOverlay;\n    }\n  }, {\n    key: \"updateGroundOverlay\",\n    value: function updateGroundOverlay(groundOverlay) {\n      var opacity = this.props.opacity;\n      groundOverlay.setOpacity(opacity);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.overlay) {\n        this.overlay = this.createGroundOverlay();\n      }\n\n      this.updateGroundOverlay(this.overlay);\n      return null;\n    }\n  }]);\n\n  return GroundOverlay;\n}(React.PureComponent);\n\nGroundOverlay.defaultProps = {\n  events: ['click', 'dblclick']\n};\nGroundOverlay.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.string),\n  bounds: PropTypes.object.isRequired,\n  url: PropTypes.string.isRequired,\n  clickable: PropTypes.bool,\n  opacity: PropTypes.number,\n  map: PropTypes.object,\n  navermaps: PropTypes.object,\n  registerEventInstance: PropTypes.func\n};\nvar GroundOverlay$1 = compose(withNavermaps, withMap, bridgeEventHandlers)(GroundOverlay);\nvar pickMarkerOptions = pick(['position', 'animation', 'icon', 'shape', 'title', 'cursor', 'clickable', 'draggable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Marker(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Marker,\n    pickOverlayOptions: pickMarkerOptions\n  }));\n}\n\nMarker.defaultProps = {\n  events: ['animation_changed', 'click', 'clickable_changed', 'dblclick', 'draggable_changed', 'icon_changed', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'position_changed', 'shape_changed', 'title_changed', 'visible_changed', 'zIndex_changed'],\n  title: null,\n  cursor: 'pointer',\n  clickable: true,\n  draggable: false,\n  visible: true\n};\nMarker.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  position: PropTypes.any.isRequired,\n  animation: PropTypes.number,\n  icon: PropTypes.any,\n  shape: PropTypes.object,\n  title: PropTypes.string,\n  cursor: PropTypes.string,\n  draggable: PropTypes.bool,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Marker$1 = withNavermaps(Marker);\nvar pickPolygonOptions = pick(['paths', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Polygon(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Polygon,\n    pickOverlayOptions: pickPolygonOptions\n  }));\n}\n\nPolygon.defaultProps = {\n  events: ['click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nPolygon.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  paths: PropTypes.any.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Polygon$1 = withNavermaps(Polygon);\nvar pickPolylineOptions = pick(['path', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'clickable', 'visible', 'zIndex', 'startIcon', 'startIconSize', 'endIcon', 'endIconSize']);\n/**\n *\n * @param {*} props\n */\n\nfunction Polyline(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Polyline,\n    pickOverlayOptions: pickPolylineOptions\n  }));\n}\n\nPolyline.defaultProps = {\n  events: ['click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nPolyline.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  path: PropTypes.any.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number,\n  startIcon: PropTypes.number,\n  startIconSize: PropTypes.number,\n  endIcon: PropTypes.number,\n  endIconSize: PropTypes.number\n};\nvar Polyline$1 = withNavermaps(Polyline);\nvar pickRectangleOptions = pick(['bounds', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Rectangle(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Rectangle,\n    pickOverlayOptions: pickRectangleOptions\n  }));\n}\n\nRectangle.defaultProps = {\n  events: ['bounds_changed', 'click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nRectangle.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  bounds: PropTypes.object.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Rectangle$1 = withNavermaps(Rectangle);\n\nvar _loadNavermapsScript = function _loadNavermapsScript(_ref) {\n  var clientId = _ref.clientId,\n      submodules = _ref.submodules,\n      ncpClientId = _ref.ncpClientId;\n  invariant(clientId || ncpClientId, 'clientId or ncpClientId is required'); // build naver maps v3 api url\n\n  var requestUrl = \"https://openapi.map.naver.com/openapi/v3/maps.js\";\n\n  if (clientId) {\n    requestUrl += \"?clientId=\".concat(clientId);\n  } else if (ncpClientId) {\n    requestUrl += \"?ncpClientId=\".concat(ncpClientId);\n  }\n\n  if (submodules) {\n    requestUrl += \"&submodules=\".concat(submodules.join(','));\n  }\n\n  return loadJs(requestUrl).then(function () {\n    var navermaps = window.naver.maps;\n\n    if (navermaps.jsContentLoaded) {\n      return navermaps;\n    }\n\n    var loadingJsContent = new Promise(function (resolve) {\n      navermaps.onJSContentLoaded = function () {\n        resolve(navermaps);\n      };\n    });\n    return loadingJsContent;\n  });\n};\n\nvar loadScriptPromise = null;\n\nvar loadNavermapsScript = function loadNavermapsScript(_ref2) {\n  var clientId = _ref2.clientId,\n      submodules = _ref2.submodules,\n      ncpClientId = _ref2.ncpClientId;\n  invariant(clientId || ncpClientId, 'loadNavermapsScript: clientId or ncpClientId is required');\n\n  if (loadScriptPromise) {\n    return loadScriptPromise;\n  }\n\n  loadScriptPromise = _loadNavermapsScript({\n    clientId: clientId,\n    ncpClientId: ncpClientId,\n    submodules: submodules\n  });\n  return loadScriptPromise;\n};\n\nvar RenderAfterNavermapsLoaded = /*#__PURE__*/function (_React$Component) {\n  _inherits(RenderAfterNavermapsLoaded, _React$Component);\n\n  function RenderAfterNavermapsLoaded(props) {\n    var _this;\n\n    _classCallCheck(this, RenderAfterNavermapsLoaded);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderAfterNavermapsLoaded).call(this, props));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(RenderAfterNavermapsLoaded, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return this.props.loading;\n      }\n\n      if (this.state.error) {\n        return this.props.error;\n      }\n\n      return this.props.children;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          clientId = _this$props.clientId,\n          ncpClientId = _this$props.ncpClientId,\n          submodules = _this$props.submodules;\n      loadNavermapsScript({\n        clientId: clientId,\n        ncpClientId: ncpClientId,\n        submodules: submodules\n      }).then(function () {\n        _this2.setState({\n          loading: false\n        });\n      }).catch(function () {\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n      });\n    }\n  }]);\n\n  return RenderAfterNavermapsLoaded;\n}(React.Component);\n\nvar cliendIdRequired = function cliendIdRequired(props, propName, componentName) {\n  invariant(props.clientId || props.ncpClientId, \"react-naver-maps: One of props 'clientId' or 'ncpClientId' should be specified in '\".concat(componentName, \"'.\"));\n};\n\nRenderAfterNavermapsLoaded.propTypes = {\n  loading: PropTypes.node,\n  error: PropTypes.node,\n  clientId: cliendIdRequired,\n  ncpClientId: cliendIdRequired,\n  submodules: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.node\n};\nRenderAfterNavermapsLoaded.defaultProps = {\n  loading: null,\n  error: null\n};\nexport { NaverMap$1 as NaverMap, Overlay$1 as Overlay, Circle$1 as Circle, Ellipse$1 as Ellipse, GroundOverlay$1 as GroundOverlay, Marker$1 as Marker, Polygon$1 as Polygon, Polyline$1 as Polyline, Rectangle$1 as Rectangle, RenderAfterNavermapsLoaded, loadNavermapsScript };","map":{"version":3,"sources":["C:/Users/devgu/Desktop/외주/팔복자동차공업사/car/car/frontend/node_modules/react-naver-maps/dist/react-naver-maps.esm.js"],"names":["a","_objectSpread","b","_classCallCheck","c","_createClass","d","_possibleConstructorReturn","e","_getPrototypeOf","f","_inherits","g","MapContext","h","pick","i","withNavermaps","j","bridgeEventHandlers","k","injectNaverRef","l","withMap","m","_extends","React","PropTypes","invariant","compose","shallowequal","loadJs","mapOptionKeys","kvoKeys","defaultKVOKeyMap","defaultMapTypeId","defaultSize","defaultBounds","defaultCenter","defaultCenterPoint","defaultZoom","defaultKVOKeys","map","key","toUpperCase","substring","length","pickMapOptions","pickKVOOptions","pickDefaultKVOKeys","NaverMap","_React$PureComponent","props","_this","call","state","value","componentWillUnmount","instance","destroy","componentDidMount","createMap","forceUpdate","componentDidUpdate","prevProps","dirtyKvos","pickDirtyKvos","Object","keys","updateKvos","shouldMapOptionsUpdate","updateMapOptions","_this$props","mapTypeId","size","bounds","center","centerPoint","zoom","dirties","getMapTypeId","getSize","equals","getZoom","getBounds","getCenter","getCenterPoint","kvos","transitionOptions","setMapTypeId","updating","setSize","setCenterPoint","panToBounds","morph","panTo","setZoom","mapOptions","setOptions","_this2","_this$props2","navermaps","id","registerEventInstance","kvoOptions","defaultKVOOptions","allMapOptions","forEach","defaultKey","Map","concat","addListener","addPane","_this$map","apply","arguments","fitBounds","_this$map2","getElement","getOptions","getPanes","getPrimitiveProjection","getProjection","_this$map3","panBy","_this$map4","_this$map5","_this$map6","refresh","_this$map7","removePane","_this$map8","setCenter","_this$map9","_this$map10","_this$map11","_this$map12","_this$map13","_this$map14","updateBy","_this$map15","zoomBy","_this$map16","render","_this$props3","style","className","children","createElement","Provider","PureComponent","propTypes","object","isRequired","func","string","node","events","arrayOf","disableDoubleClickZoom","bool","disableDoubleTapZoom","disableKineticPan","disableTwoFingerTapZoom","draggable","keyboardShortcuts","logoControl","mapDataControl","mapTypeControl","maxBounds","pinchZoom","resizeOrigin","number","scaleControl","scrollWheel","overlayZoomEffect","tileSpare","tileTransition","zoomControl","zoomOrigin","defaultProps","NaverMap$1","Overlay","_React$Component","overlay","setMap","createOverlay","OverlayView","updateOverlay","overlayOptions","pickOverlayOptions","getMap","Component","Overlay$1","pickCircleOptions","Circle","radius","strokeWeight","strokeOpacity","strokeColor","strokeStyle","strokeLineCap","strokeLineJoin","fillColor","fillOpacity","clickable","visible","zIndex","Circle$1","pickEllipseOptions","Ellipse","Ellipse$1","GroundOverlay","createGroundOverlay","url","groundOverlay","updateGroundOverlay","opacity","setOpacity","GroundOverlay$1","pickMarkerOptions","Marker","title","cursor","position","any","animation","icon","shape","Marker$1","pickPolygonOptions","Polygon","paths","Polygon$1","pickPolylineOptions","Polyline","path","startIcon","startIconSize","endIcon","endIconSize","Polyline$1","pickRectangleOptions","Rectangle","Rectangle$1","_loadNavermapsScript","_ref","clientId","submodules","ncpClientId","requestUrl","join","then","window","naver","maps","jsContentLoaded","loadingJsContent","Promise","resolve","onJSContentLoaded","loadScriptPromise","loadNavermapsScript","_ref2","RenderAfterNavermapsLoaded","loading","error","setState","catch","cliendIdRequired","propName","componentName"],"mappings":"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","sourcesContent":["import { a as _objectSpread, b as _classCallCheck, c as _createClass, d as _possibleConstructorReturn, e as _getPrototypeOf, f as _inherits, g as MapContext, h as pick, i as withNavermaps, j as bridgeEventHandlers, k as injectNaverRef, l as withMap, m as _extends } from './hocs-cc75d7f3.js';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport invariant from 'invariant';\nimport { compose } from 'recompose';\nimport shallowequal from 'shallowequal';\nimport loadJs from 'load-js';\nimport 'create-react-context';\nimport 'lodash.camelcase';\nimport 'hoist-non-react-statics';\nimport 'warning';\nimport 'react-resize-detector';\n\nvar mapOptionKeys = ['background', 'baseTileOpacity', 'disableDoubleClickZoom', 'disableDoubleTapZoom', 'disableKineticPan', 'disableTwoFingerTapZoom', 'draggable', 'keyboardShortcuts', 'logoControl', 'logoControlOptions', 'mapDataControl', 'mapDataControlOptions', 'mapTypeControl', 'mapTypeControlOptions', 'mapTypes', 'maxBounds', 'maxZoom', 'minZoom', 'padding', 'pinchZoom', 'resizeOrigin', 'scaleControl', 'scaleControlOptions', 'scrollWheel', 'overlayZoomEffect', 'tileSpare', 'tileTransition', 'zoomControl', 'zoomControlOptions', 'zoomOrigin'];\nvar kvoKeys = ['mapTypeId', 'size', 'bounds', 'center', 'centerPoint', 'zoom'];\nvar defaultKVOKeyMap = {\n  defaultMapTypeId: 'mapTypeId',\n  defaultSize: 'size',\n  defaultBounds: 'bounds',\n  defaultCenter: 'center',\n  defaultCenterPoint: 'centerPoint',\n  defaultZoom: 'zoom'\n};\nvar defaultKVOKeys = kvoKeys.map(function (key) {\n  return 'default' + key[0].toUpperCase() + key.substring(1, key.length);\n});\nvar pickMapOptions = pick(mapOptionKeys);\nvar pickKVOOptions = pick(kvoKeys);\nvar pickDefaultKVOKeys = pick(defaultKVOKeys);\n\nvar NaverMap =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(NaverMap, _React$PureComponent);\n\n  function NaverMap(props) {\n    var _this;\n\n    _classCallCheck(this, NaverMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NaverMap).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(NaverMap, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.instance) {\n        this.instance.destroy();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createMap();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var dirtyKvos = this.pickDirtyKvos(prevProps);\n\n      if (Object.keys(dirtyKvos).length > 0) {\n        this.updateKvos(dirtyKvos);\n      }\n\n      if (this.shouldMapOptionsUpdate(prevProps)) {\n        this.updateMapOptions();\n      }\n    }\n  }, {\n    key: \"pickDirtyKvos\",\n    value: function pickDirtyKvos(prevProps) {\n      var _this$props = this.props,\n          mapTypeId = _this$props.mapTypeId,\n          size = _this$props.size,\n          bounds = _this$props.bounds,\n          center = _this$props.center,\n          centerPoint = _this$props.centerPoint,\n          zoom = _this$props.zoom;\n      var dirties = {};\n\n      if (mapTypeId !== prevProps.mapTypeId && this.getMapTypeId() !== mapTypeId) {\n        dirties.mapTypeId = mapTypeId;\n      }\n\n      if (size !== prevProps.size && !this.getSize().equals(size)) {\n        dirties.size = size;\n      }\n\n      if (zoom !== prevProps.zoom && this.getZoom() !== zoom) {\n        dirties.zoom = zoom;\n      }\n\n      if (bounds !== prevProps.bounds && !this.getBounds().equals(bounds)) {\n        dirties.bounds = bounds;\n      }\n\n      if (center !== prevProps.center && !this.getCenter().equals(center)) {\n        dirties.center = center;\n      }\n\n      if (centerPoint !== prevProps.centerPoint && !this.getCenterPoint().equals(centerPoint)) {\n        dirties.centerPoint = centerPoint;\n      }\n\n      if (zoom !== prevProps.zoom && this.getZoom() !== zoom) {\n        dirties.zoom = zoom;\n      }\n\n      return dirties;\n    }\n  }, {\n    key: \"updateKvos\",\n    value: function updateKvos(kvos) {\n      var transitionOptions = this.props.transitionOptions;\n      var mapTypeId = kvos.mapTypeId,\n          size = kvos.size,\n          bounds = kvos.bounds,\n          center = kvos.center,\n          centerPoint = kvos.centerPoint,\n          zoom = kvos.zoom;\n\n      if (mapTypeId) {\n        this.setMapTypeId(mapTypeId);\n      }\n\n      if (size) {\n        this.updating = true;\n        this.setSize(size);\n      }\n\n      if (centerPoint) {\n        this.updating = true;\n        this.setCenterPoint(centerPoint);\n      }\n\n      if (bounds) {\n        this.updating = true;\n        this.panToBounds(bounds);\n      } else {\n        if (center && zoom) {\n          this.updating = true;\n          this.morph(center, zoom, transitionOptions);\n        } else {\n          if (center) {\n            this.updating = true;\n            this.panTo(center, transitionOptions);\n          }\n\n          if (zoom) {\n            this.updating = true;\n            this.setZoom(zoom);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"shouldMapOptionsUpdate\",\n    value: function shouldMapOptionsUpdate(prevProps) {\n      return !shallowequal(pickMapOptions(this.props), pickMapOptions(prevProps));\n    }\n  }, {\n    key: \"updateMapOptions\",\n    value: function updateMapOptions() {\n      var mapOptions = pickMapOptions(this.props);\n      this.setOptions(_objectSpread({}, mapOptions));\n    }\n    /**\n     * createMap\n     *\n     * create map instance with props.\n     */\n\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          navermaps = _this$props2.navermaps,\n          id = _this$props2.id,\n          registerEventInstance = _this$props2.registerEventInstance;\n      invariant(id, 'react-naver-maps: <Map /> - props.id is required');\n      var mapOptions = pickMapOptions(this.props);\n      var kvoOptions = pickKVOOptions(this.props);\n      var defaultKVOOptions = pickDefaultKVOKeys(this.props);\n\n      var allMapOptions = _objectSpread({}, mapOptions, kvoOptions);\n\n      Object.keys(defaultKVOOptions).forEach(function (defaultKey) {\n        allMapOptions[defaultKVOKeyMap[defaultKey]] = defaultKVOOptions[defaultKey];\n      });\n\n      try {\n        this.instance = new navermaps.Map(id, allMapOptions);\n      } catch (e) {\n        invariant(false, \"react-naver-maps: <Map /> - please check <div id=#\".concat(id, \"> is correctly mounted\"));\n      } // alias\n\n\n      this.map = this.instance;\n      registerEventInstance(this.map); // clear updating state\n\n      this.map.addListener('idle', function () {\n        _this2.updating = false;\n      });\n    }\n    /**\n     * Add pane\n     * @public\n     * @param {string} name\n     * @param {HTMLElement|number} elementOrZIndex\n     */\n\n  }, {\n    key: \"addPane\",\n    value: function addPane() {\n      var _this$map;\n\n      return (_this$map = this.map).addPane.apply(_this$map, arguments);\n    }\n    /**\n     * @public\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return this.map.destroy();\n    }\n    /**\n     * fit bounds\n     * @public\n     * @param  {object} bounds\n     * @param  {object} margin\n     */\n\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds() {\n      var _this$map2;\n\n      return (_this$map2 = this.map).fitBounds.apply(_this$map2, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.map.getBounds();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.map.getCenter();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint() {\n      return this.map.getCenterPoint();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getElement\",\n    value: function getElement() {\n      return this.map.getElement();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getMapTypeId\",\n    value: function getMapTypeId() {\n      return this.map.getMapTypeId();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return this.map.getOptions();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getPanes\",\n    value: function getPanes() {\n      return this.map.getPanes();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getPrimitiveProjection\",\n    value: function getPrimitiveProjection() {\n      return this.map.getPrimitiveProjection();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getProjection\",\n    value: function getProjection() {\n      return this.map.getProjection();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.map.getSize();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.map.getZoom();\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"morph\",\n    value: function morph() {\n      var _this$map3;\n\n      return (_this$map3 = this.map).morph.apply(_this$map3, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"panBy\",\n    value: function panBy() {\n      var _this$map4;\n\n      return (_this$map4 = this.map).panBy.apply(_this$map4, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"panTo\",\n    value: function panTo() {\n      var _this$map5;\n\n      return (_this$map5 = this.map).panTo.apply(_this$map5, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"panToBounds\",\n    value: function panToBounds() {\n      var _this$map6;\n\n      return (_this$map6 = this.map).panToBounds.apply(_this$map6, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this$map7;\n\n      return (_this$map7 = this.map).refresh.apply(_this$map7, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"removePane\",\n    value: function removePane() {\n      var _this$map8;\n\n      return (_this$map8 = this.map).removePane.apply(_this$map8, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setCenter\",\n    value: function setCenter() {\n      var _this$map9;\n\n      return (_this$map9 = this.map).setCenter.apply(_this$map9, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint() {\n      var _this$map10;\n\n      return (_this$map10 = this.map).setCenterPoint.apply(_this$map10, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setMapTypeId\",\n    value: function setMapTypeId() {\n      var _this$map11;\n\n      return (_this$map11 = this.map).setMapTypeId.apply(_this$map11, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setOptions\",\n    value: function setOptions() {\n      var _this$map12;\n\n      return (_this$map12 = this.map).setOptions.apply(_this$map12, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"setSize\",\n    value: function setSize() {\n      var _this$map13;\n\n      return (_this$map13 = this.map).setSize.apply(_this$map13, arguments);\n    }\n    /**\n     *\n     * @public\n     * @param  {...any} args\n     */\n\n  }, {\n    key: \"setZoom\",\n    value: function setZoom() {\n      var _this$map14;\n\n      return (_this$map14 = this.map).setZoom.apply(_this$map14, arguments);\n    }\n    /**\n     *\n     * @public\n     * @param  {...any} args\n     */\n\n  }, {\n    key: \"updateBy\",\n    value: function updateBy() {\n      var _this$map15;\n\n      return (_this$map15 = this.map).updateBy.apply(_this$map15, arguments);\n    }\n    /**\n     *\n     * @param  {...any} args\n     * @public\n     */\n\n  }, {\n    key: \"zoomBy\",\n    value: function zoomBy() {\n      var _this$map16;\n\n      return (_this$map16 = this.map).zoomBy.apply(_this$map16, arguments);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          id = _this$props3.id,\n          style = _this$props3.style,\n          className = _this$props3.className,\n          children = _this$props3.children;\n      return React.createElement(MapContext.Provider, {\n        value: this.map\n      }, React.createElement(\"div\", {\n        id: id,\n        className: className,\n        style: style\n      }, children)); // return (\n      //   <div id={id} className={className} style={style}>\n      //     {this.map &&\n      //       React.Children.map(children, child => {\n      //         if (child) {\n      //           return <child.type {...child.props} map={this.map} />;\n      //         }\n      //         return child;\n      //       })}\n      //   </div>\n      // );\n    }\n  }]);\n\n  return NaverMap;\n}(React.PureComponent);\n/**\n *  @visibleName NaverMap\n */\n\n\nNaverMap.propTypes = {\n  navermaps: PropTypes.object.isRequired,\n  registerEventInstance: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  events: PropTypes.arrayOf(PropTypes.string),\n  disableDoubleClickZoom: PropTypes.bool,\n  disableDoubleTapZoom: PropTypes.bool,\n  disableKineticPan: PropTypes.bool,\n  disableTwoFingerTapZoom: PropTypes.bool,\n  draggable: PropTypes.bool,\n  keyboardShortcuts: PropTypes.bool,\n  logoControl: PropTypes.bool,\n  mapDataControl: PropTypes.bool,\n  mapTypeControl: PropTypes.bool,\n  maxBounds: PropTypes.object,\n  pinchZoom: PropTypes.bool,\n  resizeOrigin: PropTypes.number,\n  scaleControl: PropTypes.bool,\n  scrollWheel: PropTypes.bool,\n  overlayZoomEffect: PropTypes.string,\n  tileSpare: PropTypes.number,\n  tileTransition: PropTypes.bool,\n  zoomControl: PropTypes.bool,\n  zoomOrigin: PropTypes.object,\n  mapTypeId: PropTypes.number,\n  size: PropTypes.object,\n  bounds: PropTypes.object,\n  center: PropTypes.object,\n  centerPoint: PropTypes.object,\n  zoom: PropTypes.number,\n  transitionOptions: PropTypes.object\n};\nNaverMap.defaultProps = {\n  events: ['addLayer', 'click', 'dblclick', 'doubletap', 'drag', 'dragend', 'dragstart', 'idle', 'keydown', 'keyup', 'longtap', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'panning', 'pinch', 'pinchend', 'pinchstart', 'removeLayer', 'resize', 'rightclick', 'tap', 'tilesloaded', 'touchend', 'touchmove', 'touchstart', 'twofingertap', 'zooming', 'mapType_changed', 'mapTypeId_changed', 'size_changed', 'bounds_changed', 'center_changed', 'centerPoint_changed', 'projection_changed', 'zoom_changed'],\n  id: 'react-naver-map',\n  disableDoubleClickZoom: false,\n  disableDoubleTapZoom: false,\n  disableKineticPan: true,\n  disableTwoFingerTapZoom: false,\n  draggable: true,\n  keyboardShortcuts: false,\n  logoControl: true,\n  mapDataControl: true,\n  mapTypeControl: false,\n  maxBounds: null,\n  pinchZoom: true,\n  resizeOrigin: 0,\n  scaleControl: true,\n  scrollWheel: true,\n  overlayZoomEffect: null,\n  tileSpare: 0,\n  tileTransition: true,\n  zoomControl: false,\n  zoomOrigin: null,\n  transitionOptions: null\n};\nvar NaverMap$1 = compose(withNavermaps, bridgeEventHandlers, injectNaverRef)(NaverMap);\n\nvar Overlay =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Overlay, _React$Component);\n\n  function Overlay() {\n    _classCallCheck(this, Overlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Overlay).apply(this, arguments));\n  }\n\n  _createClass(Overlay, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.overlay) this.overlay.setMap(null);\n    }\n  }, {\n    key: \"createOverlay\",\n    value: function createOverlay() {\n      var _this$props = this.props,\n          OverlayView = _this$props.OverlayView,\n          map = _this$props.map,\n          registerEventInstance = _this$props.registerEventInstance;\n      var overlay = new OverlayView({\n        map: map\n      });\n      registerEventInstance(overlay);\n      return overlay;\n    }\n  }, {\n    key: \"updateOverlay\",\n    value: function updateOverlay(overlay) {\n      var overlayOptions = this.props.pickOverlayOptions(this.props);\n\n      if (this.props.map !== this.overlay.getMap()) {\n        overlayOptions.map = this.props.map;\n      }\n\n      overlay.setOptions(overlayOptions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.overlay) {\n        this.overlay = this.createOverlay();\n      }\n\n      this.updateOverlay(this.overlay);\n      return null;\n    }\n  }]);\n\n  return Overlay;\n}(React.Component);\n\nOverlay.propTypes = {\n  OverlayView: PropTypes.func,\n  map: PropTypes.object,\n  registerEventInstance: PropTypes.func,\n  pickOverlayOptions: PropTypes.func\n};\nvar Overlay$1 = compose(withMap, bridgeEventHandlers)(Overlay);\n\nvar pickCircleOptions = pick(['center', 'radius', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Circle(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Circle,\n    pickOverlayOptions: pickCircleOptions\n  }));\n}\n\nCircle.defaultProps = {\n  events: ['center_changed', 'click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'radius_changed', 'visible_changed', 'zIndex_changed'],\n  radius: 0,\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nCircle.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  center: PropTypes.object.isRequired,\n  radius: PropTypes.number,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Circle$1 = withNavermaps(Circle);\n\nvar pickEllipseOptions = pick(['bounds', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Ellipse(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Ellipse,\n    pickOverlayOptions: pickEllipseOptions\n  }));\n}\n\nEllipse.defaultProps = {\n  events: ['bounds_changed', 'click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nEllipse.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  bounds: PropTypes.object.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Ellipse$1 = withNavermaps(Ellipse);\n\n/**\n *\n * @param {*} props\n */\n\nvar GroundOverlay =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(GroundOverlay, _React$PureComponent);\n\n  function GroundOverlay() {\n    _classCallCheck(this, GroundOverlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GroundOverlay).apply(this, arguments));\n  }\n\n  _createClass(GroundOverlay, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.overlay) this.overlay.setMap(null);\n    }\n  }, {\n    key: \"createGroundOverlay\",\n    value: function createGroundOverlay() {\n      var _this$props = this.props,\n          navermaps = _this$props.navermaps,\n          map = _this$props.map,\n          bounds = _this$props.bounds,\n          url = _this$props.url,\n          clickable = _this$props.clickable,\n          registerEventInstance = _this$props.registerEventInstance;\n      var groundOverlay = new navermaps.GroundOverlay(url, bounds, {\n        map: map,\n        clickable: clickable\n      });\n      registerEventInstance(groundOverlay);\n      return groundOverlay;\n    }\n  }, {\n    key: \"updateGroundOverlay\",\n    value: function updateGroundOverlay(groundOverlay) {\n      var opacity = this.props.opacity;\n      groundOverlay.setOpacity(opacity);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.overlay) {\n        this.overlay = this.createGroundOverlay();\n      }\n\n      this.updateGroundOverlay(this.overlay);\n      return null;\n    }\n  }]);\n\n  return GroundOverlay;\n}(React.PureComponent);\n\nGroundOverlay.defaultProps = {\n  events: ['click', 'dblclick']\n};\nGroundOverlay.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.string),\n  bounds: PropTypes.object.isRequired,\n  url: PropTypes.string.isRequired,\n  clickable: PropTypes.bool,\n  opacity: PropTypes.number,\n  map: PropTypes.object,\n  navermaps: PropTypes.object,\n  registerEventInstance: PropTypes.func\n};\nvar GroundOverlay$1 = compose(withNavermaps, withMap, bridgeEventHandlers)(GroundOverlay);\n\nvar pickMarkerOptions = pick(['position', 'animation', 'icon', 'shape', 'title', 'cursor', 'clickable', 'draggable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Marker(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Marker,\n    pickOverlayOptions: pickMarkerOptions\n  }));\n}\n\nMarker.defaultProps = {\n  events: ['animation_changed', 'click', 'clickable_changed', 'dblclick', 'draggable_changed', 'icon_changed', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'position_changed', 'shape_changed', 'title_changed', 'visible_changed', 'zIndex_changed'],\n  title: null,\n  cursor: 'pointer',\n  clickable: true,\n  draggable: false,\n  visible: true\n};\nMarker.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  position: PropTypes.any.isRequired,\n  animation: PropTypes.number,\n  icon: PropTypes.any,\n  shape: PropTypes.object,\n  title: PropTypes.string,\n  cursor: PropTypes.string,\n  draggable: PropTypes.bool,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Marker$1 = withNavermaps(Marker);\n\nvar pickPolygonOptions = pick(['paths', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Polygon(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Polygon,\n    pickOverlayOptions: pickPolygonOptions\n  }));\n}\n\nPolygon.defaultProps = {\n  events: ['click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nPolygon.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  paths: PropTypes.any.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Polygon$1 = withNavermaps(Polygon);\n\nvar pickPolylineOptions = pick(['path', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'clickable', 'visible', 'zIndex', 'startIcon', 'startIconSize', 'endIcon', 'endIconSize']);\n/**\n *\n * @param {*} props\n */\n\nfunction Polyline(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Polyline,\n    pickOverlayOptions: pickPolylineOptions\n  }));\n}\n\nPolyline.defaultProps = {\n  events: ['click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nPolyline.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  path: PropTypes.any.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number,\n  startIcon: PropTypes.number,\n  startIconSize: PropTypes.number,\n  endIcon: PropTypes.number,\n  endIconSize: PropTypes.number\n};\nvar Polyline$1 = withNavermaps(Polyline);\n\nvar pickRectangleOptions = pick(['bounds', 'strokeWeight', 'strokeOpacity', 'strokeColor', 'strokeStyle', 'strokeLineCap', 'strokeLineJoin', 'fillColor', 'fillOpacity', 'clickable', 'visible', 'zIndex']);\n/**\n *\n * @param {*} props\n */\n\nfunction Rectangle(props) {\n  return React.createElement(Overlay$1, _extends({}, props, {\n    OverlayView: props.navermaps.Rectangle,\n    pickOverlayOptions: pickRectangleOptions\n  }));\n}\n\nRectangle.defaultProps = {\n  events: ['bounds_changed', 'click', 'clickable_changed', 'dblclick', 'mousedown', 'mouseout', 'mouseover', 'mouseup', 'visible_changed', 'zIndex_changed'],\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  strokeColor: '#007EEA',\n  strokeStyle: 'solid',\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  fillColor: 'none',\n  fillOpacity: 1,\n  clickable: false,\n  visible: true,\n  zIndex: 0\n};\nRectangle.propTypes = {\n  navermaps: PropTypes.object,\n  events: PropTypes.arrayOf(PropTypes.string),\n  bounds: PropTypes.object.isRequired,\n  strokeWeight: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  strokeLineCap: PropTypes.string,\n  strokeLineJoin: PropTypes.string,\n  fillColor: PropTypes.string,\n  fillOpacity: PropTypes.number,\n  clickable: PropTypes.bool,\n  visible: PropTypes.bool,\n  zIndex: PropTypes.number\n};\nvar Rectangle$1 = withNavermaps(Rectangle);\n\nvar _loadNavermapsScript = function _loadNavermapsScript(_ref) {\n  var clientId = _ref.clientId,\n      submodules = _ref.submodules,\n      ncpClientId = _ref.ncpClientId;\n  invariant(clientId || ncpClientId, 'clientId or ncpClientId is required'); // build naver maps v3 api url\n\n  var requestUrl = \"https://openapi.map.naver.com/openapi/v3/maps.js\";\n\n  if (clientId) {\n    requestUrl += \"?clientId=\".concat(clientId);\n  } else if (ncpClientId) {\n    requestUrl += \"?ncpClientId=\".concat(ncpClientId);\n  }\n\n  if (submodules) {\n    requestUrl += \"&submodules=\".concat(submodules.join(','));\n  }\n\n  return loadJs(requestUrl).then(function () {\n    var navermaps = window.naver.maps;\n\n    if (navermaps.jsContentLoaded) {\n      return navermaps;\n    }\n\n    var loadingJsContent = new Promise(function (resolve) {\n      navermaps.onJSContentLoaded = function () {\n        resolve(navermaps);\n      };\n    });\n    return loadingJsContent;\n  });\n};\n\nvar loadScriptPromise = null;\n\nvar loadNavermapsScript = function loadNavermapsScript(_ref2) {\n  var clientId = _ref2.clientId,\n      submodules = _ref2.submodules,\n      ncpClientId = _ref2.ncpClientId;\n  invariant(clientId || ncpClientId, 'loadNavermapsScript: clientId or ncpClientId is required');\n\n  if (loadScriptPromise) {\n    return loadScriptPromise;\n  }\n\n  loadScriptPromise = _loadNavermapsScript({\n    clientId: clientId,\n    ncpClientId: ncpClientId,\n    submodules: submodules\n  });\n  return loadScriptPromise;\n};\n\nvar RenderAfterNavermapsLoaded =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RenderAfterNavermapsLoaded, _React$Component);\n\n  function RenderAfterNavermapsLoaded(props) {\n    var _this;\n\n    _classCallCheck(this, RenderAfterNavermapsLoaded);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderAfterNavermapsLoaded).call(this, props));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(RenderAfterNavermapsLoaded, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return this.props.loading;\n      }\n\n      if (this.state.error) {\n        return this.props.error;\n      }\n\n      return this.props.children;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          clientId = _this$props.clientId,\n          ncpClientId = _this$props.ncpClientId,\n          submodules = _this$props.submodules;\n      loadNavermapsScript({\n        clientId: clientId,\n        ncpClientId: ncpClientId,\n        submodules: submodules\n      }).then(function () {\n        _this2.setState({\n          loading: false\n        });\n      }).catch(function () {\n        _this2.setState({\n          loading: false,\n          error: true\n        });\n      });\n    }\n  }]);\n\n  return RenderAfterNavermapsLoaded;\n}(React.Component);\n\nvar cliendIdRequired = function cliendIdRequired(props, propName, componentName) {\n  invariant(props.clientId || props.ncpClientId, \"react-naver-maps: One of props 'clientId' or 'ncpClientId' should be specified in '\".concat(componentName, \"'.\"));\n};\n\nRenderAfterNavermapsLoaded.propTypes = {\n  loading: PropTypes.node,\n  error: PropTypes.node,\n  clientId: cliendIdRequired,\n  ncpClientId: cliendIdRequired,\n  submodules: PropTypes.arrayOf(PropTypes.string),\n  children: PropTypes.node\n};\nRenderAfterNavermapsLoaded.defaultProps = {\n  loading: null,\n  error: null\n};\n\nexport { NaverMap$1 as NaverMap, Overlay$1 as Overlay, Circle$1 as Circle, Ellipse$1 as Ellipse, GroundOverlay$1 as GroundOverlay, Marker$1 as Marker, Polygon$1 as Polygon, Polyline$1 as Polyline, Rectangle$1 as Rectangle, RenderAfterNavermapsLoaded, loadNavermapsScript };\n"]},"metadata":{},"sourceType":"module"}