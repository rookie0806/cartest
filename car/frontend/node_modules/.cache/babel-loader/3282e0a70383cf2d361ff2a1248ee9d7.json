{"ast":null,"code":"// imports\n// actions\nconst SAVE_TOKEN = \"SAVE_TOKEN\";\nconst LOGOUT = \"LOGOUT\"; // action creators\n\nfunction saveToken(token) {\n  return {\n    type: SAVE_TOKEN,\n    token\n  };\n}\n\nfunction logout() {\n  return {\n    type: LOGOUT\n  };\n}\n\nfunction usernameLogin(username, password) {\n  return dispatch => {\n    fetch(\"/rest-auth/login/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(json => {\n      if (json.token) {\n        dispatch(saveToken(json.token));\n      }\n    }).catch(err => console.log(err));\n  };\n}\n\nfunction createAccount(username, password, email, name) {\n  return dispatch => {\n    fetch(\"/rest-auth/registration/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password1: password,\n        password2: password,\n        name\n      })\n    }).then(response => response.json()).then(json => {\n      if (json.token) {\n        dispatch(saveToken(json.token));\n      }\n    }).catch(err => console.log(err));\n  };\n} // initial state\n\n\nconst initialState = {\n  isLoggedIn: localStorage.getItem(\"jwt\") ? true : false,\n  token: localStorage.getItem(\"jwt\")\n}; // reducer\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case SAVE_TOKEN:\n      return applySetToken(state, action);\n\n    case LOGOUT:\n      return applyLogout(state, action);\n\n    default:\n      return state;\n  }\n} // reducer functions\n\n\nfunction applySetToken(state, action) {\n  const {\n    token\n  } = action;\n  localStorage.setItem(\"jwt\", token);\n  return { ...state,\n    isLoggedIn: true,\n    token: token\n  };\n}\n\nfunction applyLogout(state, action) {\n  localStorage.removeItem(\"jwt\");\n  return {\n    isLoggedIn: false\n  };\n} // exports\n\n\nconst actionCreators = {\n  usernameLogin,\n  createAccount,\n  logout\n};\nexport { actionCreators }; // export reducer by default\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/devgu/bitdiary/bitdiary/frontend/src/redux/modules/user.js"],"names":["SAVE_TOKEN","LOGOUT","saveToken","token","type","logout","usernameLogin","username","password","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","console","log","createAccount","email","name","password1","password2","initialState","isLoggedIn","localStorage","getItem","reducer","state","action","applySetToken","applyLogout","setItem","removeItem","actionCreators"],"mappings":"AAAA;AAEA;AAEA,MAAMA,UAAU,GAAG,YAAnB;AACA,MAAMC,MAAM,GAAG,QAAf,C,CAEA;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAEJ,UADD;AAELG,IAAAA;AAFK,GAAP;AAID;;AAED,SAASE,MAAT,GAAkB;AAChB,SAAO;AACLD,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD;;AAGD,SAASK,aAAT,CAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C;AACzC,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAC,mBAAD,EAAsB;AACzBC,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgB;AAKzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA,QADmB;AAEnBC,QAAAA;AAFmB,OAAf;AALmB,KAAtB,CAAL,CAUGQ,IAVH,CAUQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVpB,EAWGF,IAXH,CAWQE,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACf,KAAT,EAAgB;AACdM,QAAAA,QAAQ,CAACP,SAAS,CAACgB,IAAI,CAACf,KAAN,CAAV,CAAR;AACD;AACF,KAfH,EAgBGgB,KAhBH,CAgBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBhB;AAiBD,GAlBD;AAmBD;;AAED,SAASG,aAAT,CAAuBhB,QAAvB,EAAiCC,QAAjC,EAA2CgB,KAA3C,EAAkDC,IAAlD,EAAwD;AACtD,SAAOhB,QAAQ,IAAI;AACjBC,IAAAA,KAAK,CAAC,0BAAD,EAA6B;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFuB;AAKhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA,QADmB;AAEnBmB,QAAAA,SAAS,EAAElB,QAFQ;AAGnBmB,QAAAA,SAAS,EAAEnB,QAHQ;AAInBiB,QAAAA;AAJmB,OAAf;AAL0B,KAA7B,CAAL,CAYGT,IAZH,CAYQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAZpB,EAaGF,IAbH,CAaQE,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACf,KAAT,EAAgB;AACdM,QAAAA,QAAQ,CAACP,SAAS,CAACgB,IAAI,CAACf,KAAN,CAAV,CAAR;AACD;AACF,KAjBH,EAkBGgB,KAlBH,CAkBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAlBhB;AAmBD,GApBD;AAqBD,C,CAKD;;;AAEA,MAAMQ,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAEC,YAAY,CAACC,OAAb,CAAqB,KAArB,IAA8B,IAA9B,GAAqC,KAD9B;AAEnB5B,EAAAA,KAAK,EAAE2B,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFY,CAArB,C,CAKA;;AAEA,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAAC9B,IAAf;AACE,SAAKJ,UAAL;AACE,aAAOmC,aAAa,CAACF,KAAD,EAAQC,MAAR,CAApB;;AACF,SAAKjC,MAAL;AACE,aAAOmC,WAAW,CAACH,KAAD,EAAQC,MAAR,CAAlB;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,C,CAED;;;AAEA,SAASE,aAAT,CAAuBF,KAAvB,EAA8BC,MAA9B,EAAsC;AACpC,QAAM;AAAE/B,IAAAA;AAAF,MAAY+B,MAAlB;AACAJ,EAAAA,YAAY,CAACO,OAAb,CAAqB,KAArB,EAA4BlC,KAA5B;AACA,SAAO,EACL,GAAG8B,KADE;AAELJ,IAAAA,UAAU,EAAE,IAFP;AAGL1B,IAAAA,KAAK,EAAEA;AAHF,GAAP;AAKD;;AAED,SAASiC,WAAT,CAAqBH,KAArB,EAA4BC,MAA5B,EAAoC;AAClCJ,EAAAA,YAAY,CAACQ,UAAb,CAAwB,KAAxB;AACA,SAAO;AACLT,IAAAA,UAAU,EAAE;AADP,GAAP;AAGD,C,CAGD;;;AAEA,MAAMU,cAAc,GAAG;AACrBjC,EAAAA,aADqB;AAErBiB,EAAAA,aAFqB;AAGrBlB,EAAAA;AAHqB,CAAvB;AAOA,SAASkC,cAAT,G,CAEA;;AAEA,eAAeP,OAAf","sourcesContent":["// imports\r\n\r\n// actions\r\n\r\nconst SAVE_TOKEN = \"SAVE_TOKEN\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\n// action creators\r\n\r\nfunction saveToken(token) {\r\n  return {\r\n    type: SAVE_TOKEN,\r\n    token\r\n  };\r\n}\r\n\r\nfunction logout() {\r\n  return {\r\n    type: LOGOUT\r\n  };\r\n}\r\n\r\n\r\nfunction usernameLogin(username, password) {\r\n  return dispatch => {\r\n    fetch(\"/rest-auth/login/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if (json.token) {\r\n          dispatch(saveToken(json.token));\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction createAccount(username, password, email, name) {\r\n  return dispatch => {\r\n    fetch(\"/rest-auth/registration/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password1: password,\r\n        password2: password,\r\n        name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if (json.token) {\r\n          dispatch(saveToken(json.token));\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n// initial state\r\n\r\nconst initialState = {\r\n  isLoggedIn: localStorage.getItem(\"jwt\") ? true : false,\r\n  token: localStorage.getItem(\"jwt\")\r\n};\r\n\r\n// reducer\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SAVE_TOKEN:\r\n      return applySetToken(state, action);\r\n    case LOGOUT:\r\n      return applyLogout(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// reducer functions\r\n\r\nfunction applySetToken(state, action) {\r\n  const { token } = action;\r\n  localStorage.setItem(\"jwt\", token);\r\n  return {\r\n    ...state,\r\n    isLoggedIn: true,\r\n    token: token\r\n  };\r\n}\r\n\r\nfunction applyLogout(state, action) {\r\n  localStorage.removeItem(\"jwt\");\r\n  return {\r\n    isLoggedIn: false\r\n  };\r\n}\r\n\r\n\r\n// exports\r\n\r\nconst actionCreators = {\r\n  usernameLogin,\r\n  createAccount,\r\n  logout,\r\n  \r\n};\r\n\r\nexport { actionCreators };\r\n\r\n// export reducer by default\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}