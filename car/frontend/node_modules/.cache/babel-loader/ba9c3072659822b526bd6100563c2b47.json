{"ast":null,"code":"// imports\n// actions\nconst SAVE_TOKEN = \"SAVE_TOKEN\";\nconst LOGOUT = \"LOGOUT\";\nconst SET_USER_LIST = \"SET_USER_LIST\";\nconst FOLLOW_USER = \"FOLLOW_USER\";\nconst UNFOLLOW_USER = \"UNFOLLOW_USER\";\nconst SET_EXPLORE = \"SET_EXPLORE\";\nconst SET_IMAGE_LIST = \"SET_IMAGE_LIST\"; // action creators\n\nfunction saveToken(token) {\n  return {\n    type: SAVE_TOKEN,\n    token\n  };\n}\n\nfunction logout() {\n  return {\n    type: LOGOUT\n  };\n}\n\nfunction setFollowUser(userId) {\n  return {\n    type: FOLLOW_USER,\n    userId\n  };\n}\n\nfunction setUnfollowUser(userId) {\n  return {\n    type: UNFOLLOW_USER,\n    userId\n  };\n}\n\nfunction setUserList(userList) {\n  return {\n    type: SET_USER_LIST,\n    userList\n  };\n}\n\nfunction setExplore(userList) {\n  return {\n    type: SET_EXPLORE,\n    userList\n  };\n}\n\nfunction setImageList(imageList) {\n  return {\n    type: SET_IMAGE_LIST,\n    imageList\n  };\n} // API actions\n\n\nfunction facebookLogin(access_token) {\n  return dispatch => {\n    fetch(\"/users/login/facebook/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        access_token\n      })\n    }).then(response => response.json()).then(json => {\n      if (json.token) {\n        dispatch(saveToken(json.token));\n      }\n    }).catch(err => console.log(err));\n  };\n}\n\nfunction usernameLogin(username, password) {\n  return dispatch => {\n    fetch(\"/rest-auth/login/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => response.json()).then(json => {\n      if (json.token) {\n        dispatch(saveToken(json.token));\n      }\n    }).catch(err => console.log(err));\n  };\n}\n\nfunction createAccount(username, password, email, name) {\n  return dispatch => {\n    fetch(\"/rest-auth/registration/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password1: password,\n        password2: password,\n        email,\n        name\n      })\n    }).then(response => response.json()).then(json => {\n      if (json.token) {\n        dispatch(saveToken(json.token));\n      }\n    }).catch(err => console.log(err));\n  };\n}\n\nfunction getPhotoLikes(photoId) {\n  return (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n    fetch(`/images/${photoId}/likes/`, {\n      headers: {\n        Authorization: `JWT ${token}`\n      }\n    }).then(response => {\n      if (response.status === 401) {\n        dispatch(logout());\n      }\n\n      return response.json();\n    }).then(json => {\n      dispatch(setUserList(json));\n    });\n  };\n}\n\nfunction followUser(userId) {\n  return (dispatch, getState) => {\n    dispatch(setFollowUser(userId));\n    const {\n      user: {\n        token\n      }\n    } = getState();\n    fetch(`/users/${userId}/follow/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `JWT ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.status === 401) {\n        dispatch(logout());\n      } else if (!response.ok) {\n        dispatch(setUnfollowUser(userId));\n      }\n    });\n  };\n}\n\nfunction unfollowUser(userId) {\n  return (dispatch, getState) => {\n    dispatch(setUnfollowUser(userId));\n    const {\n      user: {\n        token\n      }\n    } = getState();\n    fetch(`/users/${userId}/unfollow/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `JWT ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.status === 401) {\n        dispatch(logout());\n      } else if (!response.ok) {\n        dispatch(setFollowUser(userId));\n      }\n    });\n  };\n}\n\nfunction getExplore() {\n  return (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n    fetch(\"/users/explore/\", {\n      headers: {\n        Authorization: `JWT ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.status === 401) {\n        dispatch(logout());\n      }\n\n      return response.json();\n    }).then(json => dispatch(setExplore(json)));\n  };\n}\n\nfunction searchByTerm(searchTerm) {\n  return async (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n    const userList = await searchUsers(token, searchTerm);\n    const imageList = await searchImages(token, searchTerm);\n\n    if (userList === 401 || imageList === 401) {\n      dispatch(logout());\n    }\n\n    dispatch(setUserList(userList));\n    dispatch(setImageList(imageList));\n  };\n}\n\nfunction searchUsers(token, searchTerm) {\n  return fetch(`/users/search/?username=${searchTerm}`, {\n    headers: {\n      Authorization: `JWT ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.status === 401) {\n      return 401;\n    }\n\n    return response.json();\n  }).then(json => json);\n}\n\nfunction searchImages(token, searchTerm) {\n  return fetch(`/images/search/?hashtags=${searchTerm}`, {\n    headers: {\n      Authorization: `JWT ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.status === 401) {\n      return 401;\n    }\n\n    return response.json();\n  }).then(json => json);\n} // initial state\n\n\nconst initialState = {\n  isLoggedIn: localStorage.getItem(\"jwt\") ? true : false,\n  token: localStorage.getItem(\"jwt\")\n}; // reducer\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case SAVE_TOKEN:\n      return applySetToken(state, action);\n\n    case LOGOUT:\n      return applyLogout(state, action);\n\n    case SET_USER_LIST:\n      return applySetUserList(state, action);\n\n    case FOLLOW_USER:\n      return applyFollowUser(state, action);\n\n    case UNFOLLOW_USER:\n      return applyUnfollowUser(state, action);\n\n    case SET_EXPLORE:\n      return applySetExplore(state, action);\n\n    case SET_IMAGE_LIST:\n      return applySetImageList(state, action);\n\n    default:\n      return state;\n  }\n} // reducer functions\n\n\nfunction applySetToken(state, action) {\n  const {\n    token\n  } = action;\n  localStorage.setItem(\"jwt\", token);\n  return { ...state,\n    isLoggedIn: true,\n    token: token\n  };\n}\n\nfunction applyLogout(state, action) {\n  localStorage.removeItem(\"jwt\");\n  return {\n    isLoggedIn: false\n  };\n}\n\nfunction applySetUserList(state, action) {\n  const {\n    userList\n  } = action;\n  return { ...state,\n    userList\n  };\n}\n\nfunction applyFollowUser(state, action) {\n  const {\n    userId\n  } = action;\n  const {\n    userList\n  } = state;\n  const updatedUserList = userList.map(user => {\n    if (user.id === userId) {\n      return { ...user,\n        following: true\n      };\n    }\n\n    return user;\n  });\n  return { ...state,\n    userList: updatedUserList\n  };\n}\n\nfunction applyUnfollowUser(state, action) {\n  const {\n    userId\n  } = action;\n  const {\n    userList\n  } = state;\n  const updatedUserList = userList.map(user => {\n    if (user.id === userId) {\n      return { ...user,\n        following: false\n      };\n    }\n\n    return user;\n  });\n  return { ...state,\n    userList: updatedUserList\n  };\n}\n\nfunction applySetExplore(state, action) {\n  const {\n    userList\n  } = action;\n  return { ...state,\n    userList\n  };\n}\n\nfunction applySetImageList(state, action) {\n  const {\n    imageList\n  } = action;\n  return { ...state,\n    imageList\n  };\n} // exports\n\n\nconst actionCreators = {\n  facebookLogin,\n  usernameLogin,\n  createAccount,\n  logout,\n  getPhotoLikes,\n  followUser,\n  unfollowUser,\n  getExplore,\n  searchByTerm\n};\nexport { actionCreators }; // export reducer by default\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/devgu/bitdiary/bitdiary/frontend/src/redux/modules/user.js"],"names":["SAVE_TOKEN","LOGOUT","SET_USER_LIST","FOLLOW_USER","UNFOLLOW_USER","SET_EXPLORE","SET_IMAGE_LIST","saveToken","token","type","logout","setFollowUser","userId","setUnfollowUser","setUserList","userList","setExplore","setImageList","imageList","facebookLogin","access_token","dispatch","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","console","log","usernameLogin","username","password","createAccount","email","name","password1","password2","getPhotoLikes","photoId","getState","user","Authorization","status","followUser","ok","unfollowUser","getExplore","searchByTerm","searchTerm","searchUsers","searchImages","initialState","isLoggedIn","localStorage","getItem","reducer","state","action","applySetToken","applyLogout","applySetUserList","applyFollowUser","applyUnfollowUser","applySetExplore","applySetImageList","setItem","removeItem","updatedUserList","map","id","following","actionCreators"],"mappings":"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","sourcesContent":["// imports\r\n\r\n// actions\r\n\r\nconst SAVE_TOKEN = \"SAVE_TOKEN\";\r\nconst LOGOUT = \"LOGOUT\";\r\nconst SET_USER_LIST = \"SET_USER_LIST\";\r\nconst FOLLOW_USER = \"FOLLOW_USER\";\r\nconst UNFOLLOW_USER = \"UNFOLLOW_USER\";\r\nconst SET_EXPLORE = \"SET_EXPLORE\";\r\nconst SET_IMAGE_LIST = \"SET_IMAGE_LIST\";\r\n\r\n// action creators\r\n\r\nfunction saveToken(token) {\r\n  return {\r\n    type: SAVE_TOKEN,\r\n    token\r\n  };\r\n}\r\n\r\nfunction logout() {\r\n  return {\r\n    type: LOGOUT\r\n  };\r\n}\r\n\r\nfunction setFollowUser(userId) {\r\n  return {\r\n    type: FOLLOW_USER,\r\n    userId\r\n  };\r\n}\r\n\r\nfunction setUnfollowUser(userId) {\r\n  return {\r\n    type: UNFOLLOW_USER,\r\n    userId\r\n  };\r\n}\r\n\r\nfunction setUserList(userList) {\r\n  return {\r\n    type: SET_USER_LIST,\r\n    userList\r\n  };\r\n}\r\n\r\nfunction setExplore(userList) {\r\n  return {\r\n    type: SET_EXPLORE,\r\n    userList\r\n  };\r\n}\r\n\r\nfunction setImageList(imageList) {\r\n  return {\r\n    type: SET_IMAGE_LIST,\r\n    imageList\r\n  };\r\n}\r\n\r\n// API actions\r\n\r\nfunction facebookLogin(access_token) {\r\n  return dispatch => {\r\n    fetch(\"/users/login/facebook/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        access_token\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if (json.token) {\r\n          dispatch(saveToken(json.token));\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction usernameLogin(username, password) {\r\n  return dispatch => {\r\n    fetch(\"/rest-auth/login/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if (json.token) {\r\n          dispatch(saveToken(json.token));\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction createAccount(username, password, email, name) {\r\n  return dispatch => {\r\n    fetch(\"/rest-auth/registration/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password1: password,\r\n        password2: password,\r\n        email,\r\n        name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if (json.token) {\r\n          dispatch(saveToken(json.token));\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n}\r\n\r\nfunction getPhotoLikes(photoId) {\r\n  return (dispatch, getState) => {\r\n    const { user: { token } } = getState();\r\n    fetch(`/images/${photoId}/likes/`, {\r\n      headers: {\r\n        Authorization: `JWT ${token}`\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        dispatch(setUserList(json));\r\n      });\r\n  };\r\n}\r\n\r\nfunction followUser(userId) {\r\n  return (dispatch, getState) => {\r\n    dispatch(setFollowUser(userId));\r\n    const { user: { token } } = getState();\r\n    fetch(`/users/${userId}/follow/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `JWT ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then(response => {\r\n      if (response.status === 401) {\r\n        dispatch(logout());\r\n      } else if (!response.ok) {\r\n        dispatch(setUnfollowUser(userId));\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction unfollowUser(userId) {\r\n  return (dispatch, getState) => {\r\n    dispatch(setUnfollowUser(userId));\r\n    const { user: { token } } = getState();\r\n    fetch(`/users/${userId}/unfollow/`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `JWT ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    }).then(response => {\r\n      if (response.status === 401) {\r\n        dispatch(logout());\r\n      } else if (!response.ok) {\r\n        dispatch(setFollowUser(userId));\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction getExplore() {\r\n  return (dispatch, getState) => {\r\n    const { user: { token } } = getState();\r\n    fetch(\"/users/explore/\", {\r\n      headers: {\r\n        Authorization: `JWT ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 401) {\r\n          dispatch(logout());\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => dispatch(setExplore(json)));\r\n  };\r\n}\r\n\r\nfunction searchByTerm(searchTerm) {\r\n  return async (dispatch, getState) => {\r\n    const { user: { token } } = getState();\r\n    const userList = await searchUsers(token, searchTerm);\r\n    const imageList = await searchImages(token, searchTerm);\r\n    if (userList === 401 || imageList === 401) {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setUserList(userList));\r\n    dispatch(setImageList(imageList));\r\n  };\r\n}\r\n\r\nfunction searchUsers(token, searchTerm) {\r\n  return fetch(`/users/search/?username=${searchTerm}`, {\r\n    headers: {\r\n      Authorization: `JWT ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(response => {\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(json => json);\r\n}\r\n\r\nfunction searchImages(token, searchTerm) {\r\n  return fetch(`/images/search/?hashtags=${searchTerm}`, {\r\n    headers: {\r\n      Authorization: `JWT ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n    .then(response => {\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(json => json);\r\n}\r\n\r\n// initial state\r\n\r\nconst initialState = {\r\n  isLoggedIn: localStorage.getItem(\"jwt\") ? true : false,\r\n  token: localStorage.getItem(\"jwt\")\r\n};\r\n\r\n// reducer\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SAVE_TOKEN:\r\n      return applySetToken(state, action);\r\n    case LOGOUT:\r\n      return applyLogout(state, action);\r\n    case SET_USER_LIST:\r\n      return applySetUserList(state, action);\r\n    case FOLLOW_USER:\r\n      return applyFollowUser(state, action);\r\n    case UNFOLLOW_USER:\r\n      return applyUnfollowUser(state, action);\r\n    case SET_EXPLORE:\r\n      return applySetExplore(state, action);\r\n    case SET_IMAGE_LIST:\r\n      return applySetImageList(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// reducer functions\r\n\r\nfunction applySetToken(state, action) {\r\n  const { token } = action;\r\n  localStorage.setItem(\"jwt\", token);\r\n  return {\r\n    ...state,\r\n    isLoggedIn: true,\r\n    token: token\r\n  };\r\n}\r\n\r\nfunction applyLogout(state, action) {\r\n  localStorage.removeItem(\"jwt\");\r\n  return {\r\n    isLoggedIn: false\r\n  };\r\n}\r\n\r\nfunction applySetUserList(state, action) {\r\n  const { userList } = action;\r\n  return {\r\n    ...state,\r\n    userList\r\n  };\r\n}\r\n\r\nfunction applyFollowUser(state, action) {\r\n  const { userId } = action;\r\n  const { userList } = state;\r\n  const updatedUserList = userList.map(user => {\r\n    if (user.id === userId) {\r\n      return { ...user, following: true };\r\n    }\r\n    return user;\r\n  });\r\n  return {\r\n    ...state,\r\n    userList: updatedUserList\r\n  };\r\n}\r\n\r\nfunction applyUnfollowUser(state, action) {\r\n  const { userId } = action;\r\n  const { userList } = state;\r\n  const updatedUserList = userList.map(user => {\r\n    if (user.id === userId) {\r\n      return { ...user, following: false };\r\n    }\r\n    return user;\r\n  });\r\n  return { ...state, userList: updatedUserList };\r\n}\r\n\r\nfunction applySetExplore(state, action) {\r\n  const { userList } = action;\r\n  return {\r\n    ...state,\r\n    userList\r\n  };\r\n}\r\n\r\nfunction applySetImageList(state, action) {\r\n  const { imageList } = action;\r\n  return {\r\n    ...state,\r\n    imageList\r\n  };\r\n}\r\n\r\n// exports\r\n\r\nconst actionCreators = {\r\n  facebookLogin,\r\n  usernameLogin,\r\n  createAccount,\r\n  logout,\r\n  getPhotoLikes,\r\n  followUser,\r\n  unfollowUser,\r\n  getExplore,\r\n  searchByTerm\r\n};\r\n\r\nexport { actionCreators };\r\n\r\n// export reducer by default\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}