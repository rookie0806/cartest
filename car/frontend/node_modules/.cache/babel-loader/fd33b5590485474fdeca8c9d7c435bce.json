{"ast":null,"code":"import { actionCreators as userActions } from \"../../redux/modules/user\";\nconst SET_REPAIR = \"SET_REPAIR\";\nconst SET_ERR = \"SET_ERR\";\n\nfunction setRepair(repair) {\n  return {\n    type: SET_REPAIR,\n    repair\n  };\n}\n\nfunction setERR(err) {\n  return {\n    type: SET_ERR,\n    err\n  };\n} // API Actions\n\n\nfunction find(cn, pn) {\n  return (dispatch, getState) => {\n    const {\n      user: {\n        token\n      }\n    } = getState();\n    fetch(\"/repair/find/?cn=\" + cn + \"&pn=\" + pn, {}).then(response => {\n      return response.json();\n    }).then(json => {\n      if (json.err) {\n        dispatch(setERR(json));\n      } else {\n        dispatch(setRepair(json));\n      }\n    });\n  };\n} // Initial State\n\n\nconst initialState = {}; // Reducer\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_REPAIR:\n      return applySetREPAIR(state, action);\n\n    case SET_ERR:\n      return applySetERR(state, action);\n\n    default:\n      return state;\n  }\n} // Reducer Functions\n\n\nfunction applySetREPAIR(state, action) {\n  const {\n    repair\n  } = action;\n  return { ...state,\n    repair\n  };\n}\n\nfunction applySetERR(state, action) {\n  const {\n    err\n  } = action;\n  return { ...state,\n    err\n  };\n}\n\nconst actionCreators = {\n  find\n};\nexport { actionCreators }; // Export reducer by default\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/devgu/Desktop/외주/팔복자동차공업사/car/car/frontend/src/redux/modules/data.js"],"names":["actionCreators","userActions","SET_REPAIR","SET_ERR","setRepair","repair","type","setERR","err","find","cn","pn","dispatch","getState","user","token","fetch","then","response","json","initialState","reducer","state","action","applySetREPAIR","applySetERR"],"mappings":"AACA,SAASA,cAAc,IAAIC,WAA3B,QAA8C,0BAA9C;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,OAAO,GAAG,SAAhB;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAEJ,UADD;AAELG,IAAAA;AAFK,GAAP;AAID;;AACD,SAASE,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,SAAO;AACLF,IAAAA,IAAI,EAAEH,OADD;AAELK,IAAAA;AAFK,GAAP;AAID,C,CACD;;;AACA,SAASC,IAAT,CAAcC,EAAd,EAAiBC,EAAjB,EAAqB;AACnB,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,QAAsBF,QAAQ,EAApC;AACAG,IAAAA,KAAK,CAAC,sBAAoBN,EAApB,GAAuB,MAAvB,GAA8BC,EAA/B,EAAmC,EAAnC,CAAL,CAECM,IAFD,CAEMC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAJD,EAKCF,IALD,CAKME,IAAI,IAAI;AACZ,UAAGA,IAAI,CAACX,GAAR,EAAY;AACVI,QAAAA,QAAQ,CAACL,MAAM,CAACY,IAAD,CAAP,CAAR;AACD,OAFD,MAGI;AACFP,QAAAA,QAAQ,CAACR,SAAS,CAACe,IAAD,CAAV,CAAR;AACD;AAEF,KAbD;AAcD,GAhBD;AAiBD,C,CACD;;;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AAEA,SAASC,OAAT,CAAiBC,KAAK,GAAGF,YAAzB,EAAuCG,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAACjB,IAAf;AACE,SAAKJ,UAAL;AACE,aAAOsB,cAAc,CAACF,KAAD,EAAQC,MAAR,CAArB;;AACF,SAAKpB,OAAL;AACE,aAAOsB,WAAW,CAACH,KAAD,EAAQC,MAAR,CAAlB;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,C,CACD;;;AAEA,SAASE,cAAT,CAAwBF,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,QAAM;AAAElB,IAAAA;AAAF,MAAakB,MAAnB;AACA,SAAO,EACL,GAAGD,KADE;AAELjB,IAAAA;AAFK,GAAP;AAID;;AACD,SAASoB,WAAT,CAAqBH,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,QAAM;AAAEf,IAAAA;AAAF,MAAUe,MAAhB;AACA,SAAO,EACL,GAAGD,KADE;AAELd,IAAAA;AAFK,GAAP;AAID;;AACD,MAAMR,cAAc,GAAG;AACrBS,EAAAA;AADqB,CAAvB;AAIA,SAAST,cAAT,G,CAEA;;AAEA,eAAeqB,OAAf","sourcesContent":["\r\nimport { actionCreators as userActions } from \"../../redux/modules/user\";\r\n\r\nconst SET_REPAIR = \"SET_REPAIR\";\r\nconst SET_ERR = \"SET_ERR\";\r\nfunction setRepair(repair) {\r\n  return {\r\n    type: SET_REPAIR,\r\n    repair\r\n  };\r\n}\r\nfunction setERR(err) {\r\n  return {\r\n    type: SET_ERR,\r\n    err\r\n  };\r\n}\r\n// API Actions\r\nfunction find(cn,pn) {\r\n  return (dispatch, getState) => {\r\n    const { user: { token } } = getState();\r\n    fetch(\"/repair/find/?cn=\"+cn+\"&pn=\"+pn, {\r\n    })\r\n    .then(response => {\r\n      return response.json();\r\n    })\r\n    .then(json => {\r\n      if(json.err){\r\n        dispatch(setERR(json));\r\n      }\r\n      else{\r\n        dispatch(setRepair(json));\r\n      }\r\n        \r\n    });\r\n  };\r\n}\r\n// Initial State\r\n\r\nconst initialState = {};\r\n\r\n// Reducer\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_REPAIR:\r\n      return applySetREPAIR(state, action);\r\n    case SET_ERR:\r\n      return applySetERR(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// Reducer Functions\r\n\r\nfunction applySetREPAIR(state, action) {\r\n  const { repair } = action;\r\n  return {\r\n    ...state,\r\n    repair\r\n  };\r\n}\r\nfunction applySetERR(state, action) {\r\n  const { err } = action;\r\n  return {\r\n    ...state,\r\n    err\r\n  };\r\n}\r\nconst actionCreators = {\r\n  find,\r\n};\r\n\r\nexport { actionCreators };\r\n\r\n// Export reducer by default\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}