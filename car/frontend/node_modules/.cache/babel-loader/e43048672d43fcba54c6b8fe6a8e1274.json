{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devgu\\\\bitdiary\\\\bitdiary\\\\frontend\\\\src\\\\components\\\\TopNav\\\\container.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TopNav from \"./presenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Container extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalIsOpen: false,\n      action: \"login\",\n      username: \"\",\n      password: \"\",\n      err: \"\",\n      warning: false\n    };\n\n    this.handlelogOut = e => {\n      const {\n        logOut\n      } = this.props;\n      logOut();\n    };\n\n    this.handleOpenModal = e => {\n      this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    this.handleCloseModal = e => {\n      this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    this._handleInputChange = event => {\n      const {\n        target: {\n          value,\n          name\n        }\n      } = event;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this._handleSubmit = event => {\n      const {\n        username,\n        password,\n        action\n      } = this.state;\n      const {\n        usernameLogin\n      } = this.props;\n      const {\n        createAccount\n      } = this.props;\n      event.preventDefault();\n\n      if (action === \"login\") {\n        usernameLogin(username, password);\n      } else if (action === \"signup\") {\n        createAccount(username, password);\n      }\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      if (nextProps.err) {\n        this.setState({\n          warning: true,\n          err: nextProps.err\n        });\n      }\n\n      if (nextProps.token) {\n        this.setState({\n          modalIsOpen: false\n        });\n      }\n    };\n\n    this._changeAction = e => {\n      this.setState(prevState => {\n        const {\n          action\n        } = prevState;\n\n        if (action === \"login\") {\n          return {\n            action: \"signup\"\n          };\n        } else if (action === \"signup\") {\n          return {\n            action: \"login\"\n          };\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      nickname\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(TopNav, {\n      handlelogOut: this.handlelogOut,\n      isLoggedIn: isLoggedIn,\n      nickname: nickname,\n      ...this.state,\n      handleInputChange: this._handleInputChange,\n      handleSubmit: this._handleSubmit,\n      onKeyPress: this.onKeyPress,\n      changeAction: this._changeAction,\n      handleOpenModal: this.handleOpenModal,\n      handleCloseModal: this.handleCloseModal,\n      onClick: this.onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nContainer.propTypes = {\n  usernameLogin: PropTypes.func.isRequired,\n  createAccount: PropTypes.func.isRequired,\n  nickname: PropTypes.string.isRequired,\n  logOut: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n  token: PropTypes.string.isRequired\n};\nexport default Container;","map":{"version":3,"sources":["C:/Users/devgu/bitdiary/bitdiary/frontend/src/components/TopNav/container.js"],"names":["React","Component","PropTypes","TopNav","Container","state","modalIsOpen","action","username","password","err","warning","handlelogOut","e","logOut","props","handleOpenModal","setState","handleCloseModal","_handleInputChange","event","target","value","name","_handleSubmit","usernameLogin","createAccount","preventDefault","componentWillReceiveProps","nextProps","token","_changeAction","prevState","render","isLoggedIn","nickname","onKeyPress","onClick","propTypes","func","isRequired","string","bool"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TopNav from \"./presenter\";\r\n\r\nclass Container extends Component {\r\n  state = {\r\n    modalIsOpen : false,\r\n    action : \"login\",\r\n    username : \"\",\r\n    password : \"\",\r\n    err : \"\",\r\n    warning : false\r\n  };\r\n  static propTypes = {\r\n    usernameLogin: PropTypes.func.isRequired,\r\n    createAccount: PropTypes.func.isRequired,\r\n    nickname:PropTypes.string.isRequired,\r\n    logOut : PropTypes.func.isRequired,\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    token :  PropTypes.string.isRequired,\r\n  };\r\n  handlelogOut = (e) =>{\r\n    const {logOut} = this.props;\r\n    logOut();\r\n  }\r\n  handleOpenModal = (e) =>{\r\n    this.setState({ modalIsOpen: true });\r\n  }\r\n  \r\n  handleCloseModal = (e) =>{\r\n    this.setState({ modalIsOpen: false });\r\n  }\r\n  _handleInputChange = event => {\r\n    const { target: { value, name } } = event;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  _handleSubmit = event => {\r\n    const { username, password, action} = this.state;\r\n    const { usernameLogin } = this.props;\r\n    const { createAccount } = this.props;\r\n    event.preventDefault();\r\n    if (action === \"login\") {\r\n      usernameLogin(username, password);\r\n    } else if (action === \"signup\") {\r\n      createAccount(username, password);\r\n    }\r\n    \r\n  };\r\n  componentWillReceiveProps = nextProps => {\r\n    if (nextProps.err) {\r\n      this.setState({\r\n        warning: true,\r\n        err : nextProps.err\r\n      });\r\n    }\r\n    if (nextProps.token) {\r\n      this.setState({\r\n        modalIsOpen: false,\r\n      });\r\n    }\r\n  };\r\n  _changeAction = (e) => {\r\n    this.setState(prevState => {\r\n      const { action } = prevState;\r\n      if (action === \"login\") {\r\n        return {\r\n          action: \"signup\"\r\n        };\r\n      } else if (action === \"signup\") {\r\n        return {\r\n          action: \"login\"\r\n        };\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const {isLoggedIn,nickname} = this.props;\r\n    return (\r\n      <TopNav handlelogOut={this.handlelogOut} isLoggedIn={isLoggedIn} nickname={nickname}  {...this.state} handleInputChange={this._handleInputChange} handleSubmit={this._handleSubmit} onKeyPress={this.onKeyPress}  changeAction={this._changeAction}  handleOpenModal={this.handleOpenModal}  handleCloseModal={this.handleCloseModal} onClick={this.onClick} />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Container;"]},"metadata":{},"sourceType":"module"}