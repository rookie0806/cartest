{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { actionCreators as dataActions } from \"../../redux/modules/data\";\nimport Container from \"./container\";\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    data: {\n      mmr\n    },\n    router: {\n      location\n    }\n  } = state;\n  return {\n    summonername,\n    location,\n    mmr,\n    mmrdate\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    getMultiMMR: summonername => {\n      dispatch(dataActions.getMultiMMR(summonername));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);","map":{"version":3,"sources":["C:/Users/devgu/mymmr/frontend/src/components/MultiSearch/index.js"],"names":["connect","actionCreators","dataActions","Container","mapStateToProps","state","ownProps","data","mmr","router","location","summonername","mmrdate","mapDispatchToProps","dispatch","getMultiMMR"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,0BAA9C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAM;AAAEC,IAAAA,IAAI,EAAC;AAACC,MAAAA;AAAD,KAAP;AAAaC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAArB,MAAsCL,KAA5C;AAEA,SAAO;AACLM,IAAAA,YADK;AAELD,IAAAA,QAFK;AAGLF,IAAAA,GAHK;AAILI,IAAAA;AAJK,GAAP;AAMD,CATD;;AAWA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWR,QAAX,KAAwB;AAEjD,SAAO;AACLS,IAAAA,WAAW,EAAIJ,YAAD,IAAkB;AAC9BG,MAAAA,QAAQ,CAACZ,WAAW,CAACa,WAAZ,CAAwBJ,YAAxB,CAAD,CAAR;AACD;AAHI,GAAP;AAMD,CARD;;AAUA,eAAeX,OAAO,CAACI,eAAD,EAAkBS,kBAAlB,CAAP,CAA6CV,SAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { actionCreators as dataActions } from \"../../redux/modules/data\";\r\nimport Container from \"./container\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { data:{mmr},router: { location } } = state;\r\n\r\n  return {\r\n    summonername,\r\n    location,\r\n    mmr,\r\n    mmrdate\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\r\n  return {\r\n    getMultiMMR : (summonername) => {\r\n      dispatch(dataActions.getMultiMMR(summonername));\r\n    },\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);"]},"metadata":{},"sourceType":"module"}