{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devgu\\\\mymmr\\\\frontend\\\\src\\\\components\\\\MultiSearch\\\\container.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MultiSearch from \"./presenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Container extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      loading2: true\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      const {\n        loading2\n      } = this.state;\n\n      if (nextProps.mmr && loading2) {\n        const {\n          getmmrdate\n        } = this.props;\n        getmmrdate();\n        this.setState({\n          loading2: false\n        });\n      }\n\n      if (nextProps.mmrdate) {\n        console.log(\"dd\");\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getmmrdata\n    } = this.props;\n    getmmrdata();\n  }\n\n  render() {\n    const {\n      summonername\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(MultiSearch, { ...this.state,\n      ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nContainer.propTypes = {\n  mmr: PropTypes.array.isRequired,\n  summonername: PropTypes.string.isRequired,\n  getmmrdata: PropTypes.func.isRequired,\n  getmmrdate: PropTypes.func.isRequired\n};\nexport default Container;","map":{"version":3,"sources":["C:/Users/devgu/mymmr/frontend/src/components/MultiSearch/container.js"],"names":["React","Component","PropTypes","MultiSearch","Container","state","loading","loading2","componentWillReceiveProps","nextProps","mmr","getmmrdate","props","setState","mmrdate","console","log","componentDidMount","getmmrdata","render","summonername","propTypes","array","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADwB;;AAAA,SAkBhCC,yBAlBgC,GAkBJC,SAAS,IAAI;AACvC,YAAM;AAACF,QAAAA;AAAD,UAAa,KAAKF,KAAxB;;AACA,UAAGI,SAAS,CAACC,GAAV,IAAiBH,QAApB,EAA6B;AAC3B,cAAM;AAACI,UAAAA;AAAD,YAAgB,KAAKC,KAA3B;AACAD,QAAAA,UAAU;AACV,aAAKE,QAAL,CAAc;AACZN,UAAAA,QAAQ,EAAE;AADE,SAAd;AAKD;;AACD,UAAGE,SAAS,CAACK,OAAb,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,aAAKH,QAAL,CAAc;AACZP,UAAAA,OAAO,EAAE;AADG,SAAd;AAID;AACF,KApC+B;AAAA;;AAahCW,EAAAA,iBAAiB,GAAG;AAElB,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKN,KAA3B;AACAM,IAAAA,UAAU;AACX;;AAoBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKR,KAA9B;AAEA,wBACE,QAAC,WAAD,OAAkB,KAAKP,KAAvB;AAAA,SAAkC,KAAKO;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA3C+B;;AAA5BR,S,CAMGiB,S,GAAY;AAEjBX,EAAAA,GAAG,EAAER,SAAS,CAACoB,KAAV,CAAgBC,UAFJ;AAGjBH,EAAAA,YAAY,EAAElB,SAAS,CAACsB,MAAV,CAAiBD,UAHd;AAIjBL,EAAAA,UAAU,EAAEhB,SAAS,CAACuB,IAAV,CAAeF,UAJV;AAKjBZ,EAAAA,UAAU,EAAET,SAAS,CAACuB,IAAV,CAAeF;AALV,C;AAwCrB,eAAenB,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MultiSearch from \"./presenter\";\r\n\r\nclass Container extends Component {\r\n  state = {\r\n    loading: true,\r\n    loading2: true,\r\n    \r\n  };\r\n  static propTypes = {\r\n\r\n    mmr: PropTypes.array.isRequired,\r\n    summonername: PropTypes.string.isRequired,\r\n    getmmrdata: PropTypes.func.isRequired,\r\n    getmmrdate: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n\r\n    const {getmmrdata } = this.props;\r\n    getmmrdata();\r\n  }\r\n  componentWillReceiveProps = nextProps => {\r\n    const {loading2} = this.state;\r\n    if(nextProps.mmr && loading2){\r\n      const {getmmrdate } = this.props;\r\n      getmmrdate();\r\n      this.setState({\r\n        loading2: false\r\n      });\r\n\r\n\r\n    }\r\n    if(nextProps.mmrdate){\r\n      console.log(\"dd\");\r\n      this.setState({\r\n        loading: false\r\n      });\r\n\r\n    }\r\n  };\r\n  render() {\r\n    const { summonername } = this.props;\r\n    \r\n    return (\r\n      <MultiSearch  {...this.state} {...this.props} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;"]},"metadata":{},"sourceType":"module"}