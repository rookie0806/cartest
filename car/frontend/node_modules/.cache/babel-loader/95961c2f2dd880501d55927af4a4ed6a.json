{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { connectRouter } from 'connected-react-router';\nimport createHistory from \"history/createBrowserHistory\";\nimport thunk from \"redux-thunk\";\nimport data from \"./modules/data\";\nimport user from \"./modules/user\";\nimport { i18nState } from \"redux-i18n\";\nconst env = process.env.NODE_ENV;\nconst history = createHistory();\nconst middlewares = [thunk, routerMiddleware(history)];\nconsole.log(history);\n\nif (env === \"development\") {\n  const {\n    logger\n  } = require(\"redux-logger\");\n\n  middlewares.push(logger);\n}\n\nconst reducer = combineReducers({\n  data,\n  user,\n  i18nState,\n  router: connectRouter(history)\n});\nlet store;\n\nif (env === \"development\") {\n  store = initialState => createStore(reducer, composeWithDevTools(applyMiddleware(...middlewares)));\n} else {\n  store = initialState => createStore(reducer, applyMiddleware(...middlewares));\n}\n\nexport { history };\nexport default store();","map":{"version":3,"sources":["C:/Users/devgu/bitdiary/bitdiary/frontend/src/redux/configureStore.js"],"names":["combineReducers","createStore","applyMiddleware","routerMiddleware","composeWithDevTools","connectRouter","createHistory","thunk","data","user","i18nState","env","process","NODE_ENV","history","middlewares","console","log","logger","require","push","reducer","router","store","initialState"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAAQC,gBAAR,QAAgC,wBAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;AAEA,MAAMC,OAAO,GAAGR,aAAa,EAA7B;AAEA,MAAMS,WAAW,GAAG,CAACR,KAAD,EAAQJ,gBAAgB,CAACW,OAAD,CAAxB,CAApB;AAEAE,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,IAAIH,GAAG,KAAK,aAAZ,EAA2B;AACzB,QAAM;AAAEO,IAAAA;AAAF,MAAaC,OAAO,CAAC,cAAD,CAA1B;;AACAJ,EAAAA,WAAW,CAACK,IAAZ,CAAiBF,MAAjB;AACD;;AAED,MAAMG,OAAO,GAAGrB,eAAe,CAAC;AAC9BQ,EAAAA,IAD8B;AAE9BC,EAAAA,IAF8B;AAG9BC,EAAAA,SAH8B;AAI9BY,EAAAA,MAAM,EAAEjB,aAAa,CAACS,OAAD;AAJS,CAAD,CAA/B;AAOA,IAAIS,KAAJ;;AAEA,IAAIZ,GAAG,KAAK,aAAZ,EAA2B;AACzBY,EAAAA,KAAK,GAAGC,YAAY,IAClBvB,WAAW,CAACoB,OAAD,EAAUjB,mBAAmB,CAACF,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAA7B,CADb;AAED,CAHD,MAGO;AACLQ,EAAAA,KAAK,GAAGC,YAAY,IAAIvB,WAAW,CAACoB,OAAD,EAAUnB,eAAe,CAAC,GAAGa,WAAJ,CAAzB,CAAnC;AACD;;AAED,SAASD,OAAT;AAEA,eAAeS,KAAK,EAApB","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport {routerMiddleware } from 'connected-react-router'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { connectRouter } from 'connected-react-router'\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport thunk from \"redux-thunk\";\r\nimport data from \"./modules/data\";\r\nimport user from \"./modules/user\";\r\nimport { i18nState } from \"redux-i18n\";\r\n\r\nconst env = process.env.NODE_ENV;\r\n\r\nconst history = createHistory();\r\n\r\nconst middlewares = [thunk, routerMiddleware(history)];\r\n\r\nconsole.log(history)\r\nif (env === \"development\") {\r\n  const { logger } = require(\"redux-logger\");\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst reducer = combineReducers({\r\n  data,\r\n  user,\r\n  i18nState,\r\n  router: connectRouter(history)\r\n});\r\n\r\nlet store;\r\n\r\nif (env === \"development\") {\r\n  store = initialState =>\r\n    createStore(reducer, composeWithDevTools(applyMiddleware(...middlewares)));\r\n} else {\r\n  store = initialState => createStore(reducer, applyMiddleware(...middlewares));\r\n}\r\n\r\nexport { history };\r\n\r\nexport default store();"]},"metadata":{},"sourceType":"module"}